<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init vars
name = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw name boxes
if (name != "")
{
    draw_set_alpha(0.5);
    draw_set_font(fnt_name);
    
    //Init vars
    var a = 9;
    var b = 20;
    
    mx = mouse_x;
    /*if (mx &gt; room_width)
        mx = mouse_x - room_width;
    if (mx &lt; 0)
        mz = mouse_x + room_width;*/
        
    my = mouse_y;
    /*if (my &gt; room_height)
        my = mouse_y - room_height;
    if (my &lt; 0)
        my = mouse_y + room_height;*/
    
    draw_set_color(c_navy);
    draw_rectangle(mx, my, mx + 32 + string_length(name)*a, my + b, 0);
    draw_set_color(c_white);
    draw_text(mx + 16, my, name);
    

    /*if (mx &gt; room_width - string_length(name)*a)
    {
        draw_set_color(c_navy);
        draw_rectangle(mx-room_width, my, mx - room_width + string_length(name)*a, my+b, 0);
        draw_set_color(c_white);
        draw_text(mx-room_width, my+(b/2), name);
    }
    if (my &gt; room_height - b)
    {
        draw_set_color(c_navy);
        draw_rectangle(mx, my - room_height, mx + string_length(name)*a, my+b - room_height, 0);
        draw_set_color(c_white);
        draw_text(mx, my+(b/2) - room_height, name);
    }
    if (mx &gt; room_width - string_length(name)*a &amp;&amp; my &gt; room_height - b)
    {
        draw_set_color(c_navy);
        draw_rectangle(mx-room_width, my - room_height, mx - room_width + string_length(name)*a, my+b - room_height, 0);
        draw_set_color(c_white);
        draw_text(mx - room_width, my+(b/2) - room_height, name);
    }*/
    
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
